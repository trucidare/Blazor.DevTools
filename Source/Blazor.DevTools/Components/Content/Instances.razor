@using Blazor.DevTools.Components.Icons

<div style="display: flex; flex-direction: row; width: 100%; height: 100%; overflow: hidden;">
    <div style="flex-grow: 1;">
        @foreach (var group in GetGroups())
        {
            <div @key="@group" style="padding: 10px 10px;">
                <div style="color: rgba(255,255,255,0.6); padding: 15px 0; display: flex; flex-direction: row; align-items: center; cursor: pointer; background-color: rgba(255,255,255,.1); border-radius: 8px; user-select: none;">
                    <DIcon Style="width: 30px;">
                        @Baseline.ChevronDown
                    </DIcon>
                    <span>@group</span>
                </div>
                @foreach (var inst in _foundInstances.Where(s => s.Value.Group == group))
                {
                    <div @key="@inst" style="@(inst.Key == _selectedInstanceIndex ? "color: yellowgreen;" : "") user-select: none; padding: 5px 10px; cursor: pointer; display: flex; flex-direction: row; align-items: center; justify-content: space-between;" @onclick="@(() => SelectInstance(inst.Key))">
                        <span>@inst.Value.TypeName.Split(".").TakeLast(1).FirstOrDefault()</span>
                        <span>@inst.Key</span>
                    </div>
                }
            </div>
        }
    </div>

    <div style="border-left: 1px solid rgba(255,255,255,.4); width: 500px; padding: 10px;">
        <div style="color: rgba(255,255,255,0.6); padding: 15px 10px; display: flex; flex-direction: row; align-items: center; cursor: pointer; background-color: rgba(255,255,255,.1); border-radius: 8px; user-select: none;">
            <DIcon Style="width: 30px;">
                @Baseline.ChevronDown
            </DIcon>
            <span>Instance Details</span>
        </div>
        <div style="padding: 10px 10px; overflow-y: auto; height: calc(100% - 3rem);">
            <pre>
                @GetInstanceJson()
            </pre>
        </div>
    </div>
</div>